@using Domain.Contracts.Models.ViewModels.Post

<div class="grid-post-head">
    <a href="/Post/@post.PostId"><h3>@post.Header</h3></a>
    <div></div>
    <span><StarsRating PercentOfRating="@(post.Score * 20)" PostId="@(post.PostId)" CanChange="@(serviceOfAuthorize.DataAboutUser != null && !post.BelongsToUser)"/></span>
</div>
<p>@post.BriefDesctiption</p>
<br />
<div class="grid-comment-footer">
    <p class="container-date"><LocalizationTime Time="@post.Created" format="@("dd MMMM yyyy")"/></p>
    <div></div>
    @if ((post.BelongsToUser && (serviceOfAuthorize.DataAboutUser != null && serviceOfAuthorize.DataAboutUser.Priority > 1)) || serviceOfAuthorize.DataAboutUser != null && serviceOfAuthorize.DataAboutUser.Priority >= 3)
    {
        <div class="post-edit-delete">
            <font size="2"><a href="/CreatePost/@post.PostId"><LocalizationSentence Sentence="@("Edit")" /></a></font>
            <font size="2"><a onclick="@Delete"><LocalizationSentence Sentence="@("Delete")" /></a></font>
        </div>
    }
</div>
<hr />f
<br />

@functions{
    [Parameter] PostMiniViewModel post { get; set; }
    [Parameter] private Action<BasePostViewModel> deletePost { get; set; }

    private async Task Delete()
    {
        await serviceOfRequest.GetAsync($"api/Post/Delete?postId={post.PostId}");
        deletePost(post);
    }
}