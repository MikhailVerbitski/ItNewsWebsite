@using Domain.Contracts.Models.ViewModels.Post
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper
@inject Components.ServiceOfAuthorize serviceOfAuthorize

<div>
    <div class="grid-post-head">
        <a href="/Post/@post.PostId"><h2>@post.Header</h2></a>
        <span><StarsRating PercentOfRating="@(post.Score * 20)" PostId="@(post.PostId)" CanChange="@(serviceOfAuthorize.DataAboutUser != null && !post.BelongsToUser)"/></span>
        <div></div>
        <span>@post.Created.ToLongDateString()</span>
    </div>
    <br />
    <span>@post.BriefDesctiption</span>
</div>
<br />
<div class="grid-cols-two">
    <UserMini User="@post.AuthorUserMiniViewModel" />
    @if (post.BelongsToUser && serviceOfAuthorize.DataAboutUser != null && serviceOfAuthorize.DataAboutUser.Priority > 1)
    {
        <div class="post-edit-delete">
            <font size="2"><a href="/CreatePost/@post.PostId"><LocalizationSentence Sentence="@("Edit")" /></a></font>
            <font size="2"><a onclick="@Delete"><LocalizationSentence Sentence="@("Delete")" /></a></font>
        </div>
    }
</div>
<br />
<hr />
<br />
<br />

@functions {
    [Parameter] private PostCompactViewModel post { get; set; }
    [Parameter] private Action<BasePostViewModel> deletePost { get; set; }

    private async Task Delete()
    {
        await serviceOfAuthorize.GetAsync($"api/Post/Delete?postId={post.PostId}");
        deletePost(post);
    }
}
