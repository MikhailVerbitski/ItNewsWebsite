@inject Components.ServiceOfAuthorize serviceOfAuthorize
@using Domain.Contracts.Models.ViewModels.Comment
@using Domain.Contracts.Models

<div class="grid-comment-head">
    <a href="/Post/@comment.PostId"><h3>@comment.PostHeader</h3></a>
    <img src="/img/cross.png" onclick="@(() => delete.Invoke(comment))" class="cross" style="display: @((comment.BelongsToUser || (serviceOfAuthorize.DataAboutUser != null && serviceOfAuthorize.DataAboutUser.Priority == 3)) ? "" : "none")" />
</div>
<br />
<div style="word-wrap: break-word;">
    @comment.Content
</div>
<br />
<div class="grid-comment-footer">
    <p class="container-date">@DateConverter.GetTime(comment.Created)</p>
    <div></div>
    <p>@comment.CountOfLikes</p>
</div>
<hr />
<br />

@functions{
    [Parameter] private CommentMiniViewModel comment { get; set; }
    [Parameter] private Action<CommentMiniViewModel> delete { get; set; }
}