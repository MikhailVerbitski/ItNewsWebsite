@page "/UserPage/{login}"
@using WebBlazor.Models.ViewModels.User
@inject Components.ServiceOfAuthorize serviceOfAuthorize

@if (User == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div id="grid-user-profile" class="content-head content content-radius">
        <div>
            <div class="grid-cols-two">
                <p><a href="/UserPage/@(User.Login)"><h1>@User.FirstName @User.LastName</h1></a></p>
                <img src="@((User.Avatar == null) ? "/img/default-user-profile-image.png" : User.Avatar)" asp-append-version="true" height="100" width="100" />
            </div>
            <br />
            <div id="grid-user-profile-userData">
                <font size="5">First name:</font>
                <font size="5">@User.FirstName</font>
                <button onclick="@(() => ChangeProperty(a => a.FirstName))">change</button>

                <font size="5">Last name:</font>
                <font size="5">@User.LastName</font>
                <button onclick="@(() => ChangeProperty(a => a.LastName))">change</button>

                <font size="5" color="@User.RoleColor">Role:</font>
                <font size="5" color="@User.RoleColor">@User.Role</font>
                <button onclick="@(() => ChangeProperty(a => a.Role))">change</button>

                <font size="5">Count of likes:</font>
                <font size="5">@User.CountOfLikes</font>
                <div></div>

                <font size="5">Phone number:</font>
                <font size="5">@User.PhoneNumber</font>
                <button onclick="@(() => ChangeProperty(a => a.PhoneNumber))">change</button>

                <font size="5">Login:</font>
                <font size="5">@User.Login</font>
                <button onclick="@(() => ChangeProperty(a => a.Login))">change</button>

                <font size="5">Email:</font>
                <font size="5">@User.Email</font>
                <button onclick="@(() => ChangeProperty(a => a.Email))">change</button>

                <font size="5">Registration date:</font>
                <font size="5">@User.Created.ToLongDateString()</font>
                <div></div>
            </div>
        </div>
        <div class="grid-scroll">
            <h2>Posts</h2>
            <div class="scrollbox">
                <hr />
                <br />
                <ListViewTemplate Items="User.Posts.ToList()">
                    <ItemTemplate>
                        <PostMini post="@context" />
                    </ItemTemplate>
                </ListViewTemplate>
            </div>
        </div>
        <div class="grid-scroll">
            <h2>Comments</h2>
            <div class="scrollbox">
                <hr />
                <br />
                <ListViewTemplate Items="User.Comments.ToList()">
                    <ItemTemplate>
                        <CommentMini comment="@context" />
                    </ItemTemplate>
                </ListViewTemplate>
            </div>
        </div>
    </div>
}

@functions{
    [Parameter] private string login { get; set; }
    private UserViewModel User { get; set; }

    protected async override Task OnInitAsync()
    {
        User = await serviceOfAuthorize.GetJsonAsync<UserViewModel>($"/api/User/GetUserViewModel?login={login}");
    }
    private void ChangeProperty(System.Linq.Expressions.Expression<Func<UserViewModel, object>> property)
    {

    }
}