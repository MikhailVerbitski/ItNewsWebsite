@page "/Registration"
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper
@inject HttpClient Http
@inject Components.ServiceOfImage serviceOfImage
@addTagHelper *, Blazor.Validation

<div class="content-head content content-radius content-account">
    <h1>Registration</h1>
    @if (DisplayValidationSummary)
    {
        <div>
            <ValidationSummary Subject="@user" />
            <br />
        </div>
    }
    @if (ServerErrors != null)
    {
        <div class="validationsummary">
            <ul>
                @foreach (var error in ServerErrors)
                {
                    <li>@error</li>
                }
            </ul>
        </div>
        <br />
    }
    <div class="pure-form pure-form-stacked">

        <label for="FirstName"><font size="5">First Name</font></label>
        <input id="FirstName" type="text" bind="@user.FirstName" />
        <ValidationError Subject="@user" Property="@nameof(user.FirstName)" />
        <br />

        <label for="LastName"><font size="5">Last Name</font></label>
        <input id="LastName" type="text" bind="@user.LastName" />
        <ValidationError Subject="@user" Property="@nameof(user.LastName)" />
        <br />

        <label for="Login"><font size="5">Login</font></label>
        <input id="Login" type="text" bind="@user.Login" />
        <ValidationError Subject="@user" Property="@nameof(user.Login)" />
        <br />

        <label for="Email"><font size="5">Email</font></label>
        <input id="Email" type="text" bind="@user.Email" />
        <ValidationError Subject="@user" Property="@nameof(user.Email)" />
        <br />

        <label for="Password"><font size="5">Password</font></label>
        <input id="Password" type="password" bind="@user.Password" />
        <ValidationError Subject="@user" Property="@nameof(user.Password)" />
        <br />

        <label for="ConfirmPassword"><font size="5">Confirm password</font></label>
        <input id="ConfirmPassword" type="password" bind="@user.ConfirmPassword" />
        <ValidationError Subject="@user" Property="@nameof(user.ConfirmPassword)" />
        <br />

        <button onclick="@SubmitForm" class="pure-button pure-button-primary">Registration</button>
    </div>
</div>

    @functions{
        WebBlazor.Models.ViewModels.Account.RegisterValidationViewModel user { get; set; } = new Models.ViewModels.Account.RegisterValidationViewModel();
        private bool DisplayValidationSummary { get; set; } = false;
        private List<string> ServerErrors { get; set; }

        private async Task SubmitForm()
        {
            ServerErrors = null;
            if (!user.HasErrors)
            {
                var registerUser = new WebBlazor.Models.ViewModels.Account.RegisterViewModel()
                {
                    FirstName = user.FirstName,
                    LastName = user.LastName,
                    Login = user.Login,
                    Email = user.Email,
                    Password = user.Password
                };
                try
                {
                    ServerErrors = await Http.PostJsonAsync<List<string>>("/api/Token/Registration", registerUser);
                }
                catch
                {
                    UriHelper.NavigateTo("/Login");
                }
            }
            DisplayValidationSummary = true;
        }
    }
